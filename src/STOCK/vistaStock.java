/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package STOCK;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gonza
 */
public class vistaStock extends javax.swing.JPanel {
    
    public Nodo lc;
    public Nodo pFound;
    int num= 0;
    
    public class Nodo{
        String id;
        String nombre;
        String precio;
        String categoria;
        String cantidad;
        String color;
        Nodo enlace;

        public Nodo(String id, String nombre, String precio, String categoria, String cantidad, String color) {
            this.id = id;
            this.nombre = nombre;
            this.precio = precio;
            this.categoria = categoria;
            this.cantidad = cantidad;
            this.color = color;
            enlace = this;//enlace a si mismo
        }        
    }
    
    DefaultTableModel miModelo;
    String[] cabecera={"ID","NOMBRE","PRECIO","CATEGORIA","CANTIDAD️","COLOR"};
    String[][] data={};
    Nodo DN;
    Nodo[] dn;
      
    public vistaStock() {
        initComponents();
        lc = pFound = null;
        
        miModelo = new DefaultTableModel(data, cabecera);
        jTablestock.setModel(miModelo);
        //ListEnArchivo();
        ExtraerdeArchivo();
        
        //TAAMAÑO DE COLUMNAS
        jTablestock.getColumnModel().getColumn(0).setPreferredWidth(10);//ancho;
         jTablestock.getColumnModel().getColumn(0).setResizable(false);
        jTablestock.getColumnModel().getColumn(1).setPreferredWidth(10);
         jTablestock.getColumnModel().getColumn(1).setResizable(false);
        jTablestock.getColumnModel().getColumn(2).setPreferredWidth(10);
         jTablestock.getColumnModel().getColumn(2).setResizable(false);
        jTablestock.getColumnModel().getColumn(3).setPreferredWidth(10);
         jTablestock.getColumnModel().getColumn(3).setResizable(false);
        jTablestock.getColumnModel().getColumn(4).setPreferredWidth(10);
         jTablestock.getColumnModel().getColumn(4).setResizable(false);
        jTablestock.getColumnModel().getColumn(5).setPreferredWidth(10);
         jTablestock.getColumnModel().getColumn(5).setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jtf_ID = new javax.swing.JTextField();
        jtf_precio = new javax.swing.JTextField();
        jtf_nombre = new javax.swing.JTextField();
        jcb_categoria = new javax.swing.JComboBox<>();
        jcb_color = new javax.swing.JComboBox<>();
        jtf_cantidad = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jtf_fila = new javax.swing.JTextField();
        jtf_columna = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jtf_nuevo = new javax.swing.JTextField();
        jbt_guardar = new javax.swing.JButton();
        jbt_modificar = new javax.swing.JButton();
        jbt_eliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablestock = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(0, 0, 102));
        jPanel1.setForeground(new java.awt.Color(204, 204, 204));

        jLabel1.setBackground(new java.awt.Color(153, 153, 153));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("STOCK DE PRODUCTOS:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DATOS DEL PRODUCTO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("ID:");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 20, 20));

        jLabel3.setText("NOMBRE:");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        jLabel4.setText("PRECIO:");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 50, 20));

        jLabel5.setText("CANTIDAD:");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, -1, -1));

        jLabel6.setText("COLOR:");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 70, -1, -1));

        jLabel7.setText("CATEGORIA:");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 30, -1, -1));
        jPanel2.add(jtf_ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 93, 30));
        jPanel2.add(jtf_precio, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 97, 30));
        jPanel2.add(jtf_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 140, 28));

        jcb_categoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "POLERA CORTA", "POLERA CIERRE", "POLO CORTO", "POLO MANGALARGA", "PANTALON JEAN", "PANTALON POLAR", "SHORTs" }));
        jcb_categoria.setBorder(null);
        jPanel2.add(jcb_categoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, -1, 30));

        jcb_color.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ROJO", "AZUL", "NEGRO", "BLANCO", "ROSA", "VERDE", " " }));
        jcb_color.setBorder(null);
        jcb_color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_colorActionPerformed(evt);
            }
        });
        jPanel2.add(jcb_color, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 60, 146, 30));
        jPanel2.add(jtf_cantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 100, 104, 29));

        jLabel11.setText("fila");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(533, 33, -1, -1));
        jPanel2.add(jtf_fila, new org.netbeans.lib.awtextra.AbsoluteConstraints(561, 26, 93, 30));
        jPanel2.add(jtf_columna, new org.netbeans.lib.awtextra.AbsoluteConstraints(561, 75, 93, 28));

        jLabel12.setText("columna");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(501, 81, -1, -1));

        jLabel13.setText("nuevo valor");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(495, 117, -1, -1));
        jPanel2.add(jtf_nuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(561, 117, 97, -1));

        jbt_guardar.setBackground(new java.awt.Color(51, 51, 51));
        jbt_guardar.setFont(new java.awt.Font("Dubai", 1, 18)); // NOI18N
        jbt_guardar.setText("GUARDAR");
        jbt_guardar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbt_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_guardarActionPerformed(evt);
            }
        });
        jPanel2.add(jbt_guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 100, 100, -1));

        jbt_modificar.setBackground(new java.awt.Color(51, 51, 51));
        jbt_modificar.setFont(new java.awt.Font("Dubai", 1, 18)); // NOI18N
        jbt_modificar.setText("MODIFICAR");
        jbt_modificar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbt_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_modificarActionPerformed(evt);
            }
        });
        jPanel2.add(jbt_modificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 60, 110, 35));

        jbt_eliminar.setBackground(new java.awt.Color(51, 51, 51));
        jbt_eliminar.setFont(new java.awt.Font("Dubai", 1, 18)); // NOI18N
        jbt_eliminar.setText("ELIMINAR");
        jbt_eliminar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbt_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_eliminarActionPerformed(evt);
            }
        });
        jPanel2.add(jbt_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 20, 100, -1));

        jTablestock.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTablestock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTablestock);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 794, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    Nodo Buscar(Nodo lc, String cod)
    {   Nodo actual;
        boolean encontrado = false;
        actual = lc;
        
        while((actual.enlace!=lc)&&(!encontrado)){
            encontrado=actual.enlace.id.equalsIgnoreCase(jtf_ID.getText().trim());
            if(!encontrado){
                actual=actual.enlace;
            }
        }
        
        return actual.enlace;
    }
    
    Nodo InsertarFinal(Nodo lc, String ide, String nom, String pre, String catg, String cantda, String col)
    {
        Nodo nuevo= new Nodo(ide,nom,pre,catg,cantda,col);
        
        if(lc!=null){
            nuevo.enlace = lc.enlace;
            lc.enlace = nuevo;
        }
        lc=nuevo;
        return lc;
    }
    
    void Eliminar(){
        Nodo actual;
        boolean encontrado = false;
        actual=lc;
        
        while((actual.enlace!=lc)&&(!encontrado)){
            encontrado = actual.enlace.id.equalsIgnoreCase(jtf_ID.getText().trim());
            if(!encontrado){
                actual=actual.enlace;
            }
        }
        //verificando el dato
        encontrado = actual.enlace.id.equalsIgnoreCase(jtf_ID.getText().trim());
        //enlace de nodo anterior con el siguiente
        if(encontrado){
            Nodo p;
            p = actual.enlace;
            if(lc==lc.enlace){
                lc=null;
            }else if(p==lc){
                lc=actual;//Se borra el elemento referenciado por lc

                //el nuevo acceso a la lista en el anterior
                actual.enlace = p.enlace;
            }
        }
        VerDatos();
    }
    
    void VerDatos(){
        String ide,nom,pre,catg,cantda,col;
        float s;
        vaciar_tabla();//limpiando la tabla
        Nodo p;//puntero 
        
        if(lc!=null){
            num=0;
            p=lc.enlace;
            
            do{
                ide = p.id;
                nom = p.nombre;
                pre = p.precio;
                catg = p.categoria;
                cantda = p.cantidad;
                col = p.color;
                
                Object[] fila={ide,nom,pre,catg,cantda,col};
                miModelo.addRow(fila);
                
                p=p.enlace;
                
            }while(p!=lc.enlace);
        }
    }
    
    void LimpiarEntradas(){
        jtf_ID.setText(" ");
        jtf_nombre.setText(" ");
        jtf_precio.setText(" ");
        jcb_categoria.setSelectedIndex(0);
        jcb_color.setSelectedIndex(0);
        jtf_cantidad.setText(" ");
        jtf_fila.setText(" ");
        jtf_columna.setText(" ");
        jtf_nuevo.setText(" ");
    }
    
    void vaciar_tabla(){
        int filas=jTablestock.getRowCount();
        
        for(int i=0; i<filas; i++){
            miModelo.removeRow(0);
        }
    }
    
    void GrabarArchivo(Nodo d){
        try{
            FileWriter fw = new FileWriter("src/STOCK/Stock.txt",true);
            PrintWriter pw = new PrintWriter(fw);
            pw.println(d.id+"|"+d.nombre+"|"+d.precio+"|"+d.categoria+"|"+d.cantidad+"|"+d.color);  
            //"ID","NOMBRE","PRECIO","CATEGORIA","CANTIDAD️","COLOR"
            pw.close();
            
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "ERROR en la gravacion..." +ex);
        }     
    }
    
    void ExtraerdeArchivo(){
        String linea;        
        try{
            FileReader fr = new FileReader("src/STOCK/Stock.txt");
            BufferedReader br = new BufferedReader(fr);
            
            while((linea = br.readLine())!= null){
                StringTokenizer st = new StringTokenizer(linea, "|");
                
                //String Num = st.nextToken();
                String id = st.nextToken();
                String nombre = st.nextToken();
                String precio = st.nextToken();
                String categoria = st.nextToken();
                String cantidad = st.nextToken();
                String color = st.nextToken();
                
                DN = new Nodo(id,nombre,precio,categoria,cantidad,color);
                
                VerDatos();
            }
            br.close();   
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "ERROR en la lectura" + "del archivo..." +ex);
        }
    }
    
    private void jcb_colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_colorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcb_colorActionPerformed

    private void jbt_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_guardarActionPerformed
        // TODO add your handling code here:
        String id=jtf_ID.getText();
        String nombre=jtf_nombre.getText().toUpperCase();
        String precio=jtf_precio.getText().toUpperCase();
        String categoria=jcb_categoria.getSelectedItem().toString();       
        String cantidad=jtf_cantidad.getText().toUpperCase();
        String color=jcb_color.getSelectedItem().toString();
        
        lc = InsertarFinal(lc,id,nombre,precio,categoria,cantidad,color);
        LimpiarEntradas();
        VerDatos();
        
        /*try{
            FileWriter fw= new FileWriter("src/stock/Stock.txt",true);
            PrintWriter pw= new PrintWriter(fw);
            pw.println(jtf_ID.getText()+", "+jtf_nombre.getText()+", "+jtf_precio.getText()+ ", "
                +jcb_categoria.getSelectedItem()+", "+jtf_cantidad.getText()+", "+jcb_color.getSelectedItem());
            pw.close();
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null,"Error en la grabación...."+ex);
        }  */
    }//GEN-LAST:event_jbt_guardarActionPerformed

    private void jbt_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_modificarActionPerformed
        /*int fila = Integer.parseInt(jtf_fila.getText());
        int columna = Integer.parseInt(jtf_columna.getText());
        modelo.setValueAt(jtf_nuevo.getText(), fila, columna);*/
        
        pFound.id=jtf_ID.getText();
        pFound.nombre=jtf_nombre.getText();
        pFound.precio=jtf_precio.getText();
        pFound.categoria=jcb_categoria.getSelectedItem().toString();
        pFound.cantidad=jtf_cantidad.getText();
        pFound.color=jcb_color.getSelectedItem().toString();
     
        LimpiarEntradas();
        VerDatos();
    }//GEN-LAST:event_jbt_modificarActionPerformed

    private void jbt_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_eliminarActionPerformed
        /*int eli=jTablestock.getSelectedRow();
        if (eli>=0)
        {
            modelo.removeRow(eli);
        }
        else {
            JOptionPane.showMessageDialog(null,"selecione un dato");
        }*/
        
        Eliminar();
        LimpiarEntradas();
        VerDatos();
        if(lc==null){
            JOptionPane.showMessageDialog(this, "La lista esta vacia");       
        }

    }//GEN-LAST:event_jbt_eliminarActionPerformed
  /*void GrabarEnArchivo(String id, String nom, String prec, String cat, String cant, String col){
        try{
            FileWriter fw= new FileWriter("src/stock/Stock.txt",true);
            PrintWriter pw= new PrintWriter(fw);
            pw.println(id+", "+nombre+", "+color+ ", " +cat+", "+cant+", "+col);
            pw.close();//ide,nom,pre,catg,cantda,col
          } catch (Exception ex){
              JOptionPane.showMessageDialog(null,"Error en la grabación...."+ex);
        } 
  }
    void ListEnArchivo(){
        try{
           // model= new DefaultTableModel ();
            File f = new File ("src/stock/Stock.txt");
            
            if(f.exists())
            {
                FileReader fr = new FileReader("src/stock/Stock.txt");
                BufferedReader bf = new BufferedReader(fr);
                String cad;
                while ((cad = bf.readLine()) != null)
                {
                //System.out.println(cad);
                    String myStr = cad;
                    List myList = Arrays.asList(myStr.split(","));
                    miModelo.addRow(myList.toArray());
                }
                bf.close();
            }
            else
            {
            System.out.println("El archivo no existe");
            }

          } catch (Exception ex){
              JOptionPane.showMessageDialog(null,"Error en la lista...."+ex);
        } 
  }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablestock;
    private javax.swing.JButton jbt_eliminar;
    private javax.swing.JButton jbt_guardar;
    private javax.swing.JButton jbt_modificar;
    private javax.swing.JComboBox<String> jcb_categoria;
    private javax.swing.JComboBox<String> jcb_color;
    private javax.swing.JTextField jtf_ID;
    private javax.swing.JTextField jtf_cantidad;
    private javax.swing.JTextField jtf_columna;
    private javax.swing.JTextField jtf_fila;
    private javax.swing.JTextField jtf_nombre;
    private javax.swing.JTextField jtf_nuevo;
    private javax.swing.JTextField jtf_precio;
    // End of variables declaration//GEN-END:variables
}
